# -*- coding: utf-8 -*-
"""ETL_urlbased.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X2Ut7kXL-HdcUGHqncDcGqKdkMXPtLvR
"""



import pandas as pd
import numpy as np

# Read the CSV file from the URL
URL = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-AI0273EN-SkillsNetwork/labs/v1/m2/data/laptop_pricing_dataset_base.csv"
df = pd.read_csv(URL)

# Identify columns with "?" values
question_mark_cols = df.columns[df.isin(['?']).any()].tolist()

# Replace "?" with mean value of the respective attribute and convert to float
for col in question_mark_cols:
    mean_val = df.loc[df[col] != '?', col].astype(float).mean()
    df[col] = df[col].replace('?', mean_val).astype(float)

# Print the modified dataframe
print(df)

# Assuming 'df' is the pandas DataFrame containing your data
# Print the total number of rows before removal
print("Total number of rows before removal:", len(df))

# Remove duplicate entries
df.drop_duplicates(inplace=True)

# Print the total number of rows after removal
print("Total number of rows after removal:", len(df))

# Assuming 'df' is the pandas DataFrame containing your data

# Calculate the z-score for the 'Price' column
df['Price_zscore'] = np.abs((df['Price'] - df['Price'].mean()) / df['Price'].std())

# Define a threshold for outlier detection, e.g., z-score greater than 3
outlier_threshold = 3

# Extract entries where 'Price' has outliers
outliers_df = df[df['Price_zscore'] > outlier_threshold]

# Print the entries with outliers
print(outliers_df)

URL = "https://cf-courses-data.s3.us.cloud-object-storage.appdomain.cloud/IBMSkillsNetwork-AI0273EN-SkillsNetwork/labs/v1/m2/data/laptop_pricing_dataset_base.csv"